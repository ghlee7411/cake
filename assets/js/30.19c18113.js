(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{314:function(t,r,a){"use strict";a.r(r);var e=a(14),v=Object(e.a)({},(function(){var t=this,r=t._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"아키텍처"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#아키텍처"}},[t._v("#")]),t._v(" 아키텍처")]),t._v(" "),r("p",[t._v("Kubernetes(K8s)는 대규모 컨테이너화된 애플리케이션을 관리하기 위해 설계된 분산 시스템 플랫폼입니다. 아래에서 Kubernetes의 주요 구성 요소와 그들이 어떻게 함께 작동하는지에 대해 자세히 살펴보겠습니다.")]),t._v(" "),r("h2",{attrs:{id:"목차"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#목차"}},[t._v("#")]),t._v(" 목차")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"#%EA%B0%9C%EC%9A%94"}},[t._v("개요")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#master-node"}},[t._v("Master Node")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#worker-node"}},[t._v("Worker Node")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#%EA%B8%B0%ED%83%80-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C"}},[t._v("기타 구성 요소")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#%EC%BB%A8%ED%8A%B8%EB%A1%A4-%ED%94%8C%EB%A0%88%EC%9D%B8"}},[t._v("컨트롤 플레인")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#%EB%84%A4%ED%8A%B8%EC%9B%8C%ED%81%AC"}},[t._v("네트워크")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#%EC%A0%80%EC%9E%A5%EC%86%8C"}},[t._v("저장소")])]),t._v(" "),r("li",[r("a",{attrs:{href:"#%EA%B2%B0%EB%A1%A0"}},[t._v("결론")])])]),t._v(" "),r("h2",{attrs:{id:"개요"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#개요"}},[t._v("#")]),t._v(" 개요")]),t._v(" "),r("p",[t._v("Kubernetes 아키텍처는 크게 Master Node와 Worker Node로 나뉘며, 여러 컴포넌트들이 각 노드에서 실행되어 전체 시스템을 형성합니다.")]),t._v(" "),r("h2",{attrs:{id:"master-node"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#master-node"}},[t._v("#")]),t._v(" Master Node")]),t._v(" "),r("p",[t._v("Master Node는 Kubernetes 클러스터의 두뇌로서, 클러스터 관리 및 오케스트레이션을 담당합니다. Master Node의 주요 컴포넌트는 다음과 같습니다:")]),t._v(" "),r("h3",{attrs:{id:"api-server"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#api-server"}},[t._v("#")]),t._v(" API Server")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("역할")]),t._v(": 클러스터 내의 모든 통신의 허브 역할을 담당합니다.")]),t._v(" "),r("li",[r("strong",[t._v("특징")]),t._v(" "),r("ul",[r("li",[t._v("RESTful API 서버")]),t._v(" "),r("li",[t._v("클러스터 상태 및 구성을 저장하는 etcd 데이터베이스와 통신")])])])]),t._v(" "),r("h3",{attrs:{id:"etcd"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#etcd"}},[t._v("#")]),t._v(" etcd")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("역할")]),t._v(": 클러스터의 모든 구성 데이터와 상태 정보를 저장하는 라이트웨이트 분산 키-값 스토어입니다.")]),t._v(" "),r("li",[r("strong",[t._v("특징")]),t._v(" "),r("ul",[r("li",[t._v("CP(Consistent, Partition-tolerant) 시스템으로 설계")]),t._v(" "),r("li",[t._v("안전하고 빠른 데이터 스토어")])])])]),t._v(" "),r("h3",{attrs:{id:"controller-manager"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#controller-manager"}},[t._v("#")]),t._v(" Controller Manager")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("역할")]),t._v(": 클러스터 상태를 제어하며, 현재 상태를 목표 상태로 유지하려고 합니다.")]),t._v(" "),r("li",[r("strong",[t._v("특징")]),t._v(" "),r("ul",[r("li",[t._v("노드, 엔드포인트 등 다양한 컨트롤러를 관리")]),t._v(" "),r("li",[t._v("노드 실패 처리, 노드 상태 모니터링 등을 담당")])])])]),t._v(" "),r("h3",{attrs:{id:"scheduler"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#scheduler"}},[t._v("#")]),t._v(" Scheduler")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("역할")]),t._v(": 파드를 적절한 워커 노드에 할당하는 역할을 담당합니다.")]),t._v(" "),r("li",[r("strong",[t._v("특징")]),t._v(" "),r("ul",[r("li",[t._v("노드 선택 기준을 기반으로 최적의 노드를 선택")]),t._v(" "),r("li",[t._v("리소스 사용량, 제약 조건, 어피니티/앤티-어피니티 설정 고려")])])])]),t._v(" "),r("h2",{attrs:{id:"worker-node"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#worker-node"}},[t._v("#")]),t._v(" Worker Node")]),t._v(" "),r("p",[t._v("Worker Node는 실제로 컨테이너화된 애플리케이션을 실행하는 노드입니다. Worker Node의 주요 컴포넌트는 다음과 같습니다:")]),t._v(" "),r("h3",{attrs:{id:"kubelet"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kubelet"}},[t._v("#")]),t._v(" Kubelet")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("역할")]),t._v(": 노드에서 파드와 컨테이너의 상태를 관리하며, 마스터 노드와 통신합니다.")]),t._v(" "),r("li",[r("strong",[t._v("특징")]),t._v(" "),r("ul",[r("li",[t._v("노드의 상태 보고")]),t._v(" "),r("li",[t._v("파드 사양에 따라 컨테이너를 생성하고 모니터링")])])])]),t._v(" "),r("h3",{attrs:{id:"kube-proxy"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#kube-proxy"}},[t._v("#")]),t._v(" Kube Proxy")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("역할")]),t._v(": 각 노드에서 네트워크 프록시 서비스를 제공하여 파드 간의 통신을 가능하게 합니다.")]),t._v(" "),r("li",[r("strong",[t._v("특징")]),t._v(" "),r("ul",[r("li",[t._v("서비스의 IP와 포트를 사용하여 파드에 접근")]),t._v(" "),r("li",[t._v("네트워크 라우팅 및 로드 밸런싱을 관리")])])])]),t._v(" "),r("h3",{attrs:{id:"container-runtime"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#container-runtime"}},[t._v("#")]),t._v(" Container Runtime")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("역할")]),t._v(": 컨테이너를 실행하는 역할을 담당합니다.")]),t._v(" "),r("li",[r("strong",[t._v("특징")]),t._v(" "),r("ul",[r("li",[t._v("Docker, containerd 등 다양한 런타임 지원")]),t._v(" "),r("li",[t._v("이미지 관리 및 컨테이너 실행")])])])]),t._v(" "),r("h2",{attrs:{id:"기타-구성-요소"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#기타-구성-요소"}},[t._v("#")]),t._v(" 기타 구성 요소")]),t._v(" "),r("h3",{attrs:{id:"pod"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#pod"}},[t._v("#")]),t._v(" Pod")]),t._v(" "),r("ul",[r("li",[r("strong",[t._v("역할")]),t._v(": 하나 이상의 컨테이너 그룹으로, 쿠버네티스의 배포 및 관리 단위입니다.")]),t._v(" "),r("li",[r("strong",[t._v("특징")]),t._v(" "),r("ul",[r("li",[t._v("로컬호스트 또는 노드 내 네트워크 네임스페이스를 공유")]),t._v(" "),r("li",[t._v("파드 내의 컨테이너들은 같은 IP와 포트 공간을 사용")])])])]),t._v(" "),r("h2",{attrs:{id:"컨트롤-플레인"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#컨트롤-플레인"}},[t._v("#")]),t._v(" 컨트롤 플레인")]),t._v(" "),r("p",[t._v("컨트롤 플레인은 Master Node의 컴포넌트를 통칭하는 용어로, 클러스터의 상태를 관리하고 오케스트레이션을 담당합니다.")]),t._v(" "),r("h2",{attrs:{id:"네트워크"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#네트워크"}},[t._v("#")]),t._v(" 네트워크")]),t._v(" "),r("p",[t._v("Kubernetes는 클러스터 내의 네트워크 통신을 위해 다양한 네트워크 플러그인과 솔루션을 지원합니다.")]),t._v(" "),r("h2",{attrs:{id:"저장소"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#저장소"}},[t._v("#")]),t._v(" 저장소")]),t._v(" "),r("p",[t._v("저장소(Volumes)는 파드가 디스크 리소스를 사용할 수 있게 하는 메커니즘이며, 파드의 생명주기 동안 데이터를 지속적으로 저장할 수 있습니다.")]),t._v(" "),r("h2",{attrs:{id:"결론"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#결론"}},[t._v("#")]),t._v(" 결론")]),t._v(" "),r("p",[t._v("Kubernetes 아키텍처는 마스터 노드와 워커 노드, 그리고 여러 기타 구성 요소로 구성되어 있습니다. 이러한 구조는 높은 가용성과 확장성을 보장하며, 현대의 컨테이너화된 애플리케이션 배포와 관리를 효율적")])])}),[],!1,null,null,null);r.default=v.exports}}]);